(copy_files bindings/{blst_bindings_stubs.c,blst_bindings_stubs.js})

(copy_files bindings/{blst.c,blst_wrapper.c})

(copy_files bindings/blst_misc.h)

(copy_files bindings/blst_extended.h)

(copy_files bindings/caml_bls12_381_stubs.h)

(copy_files libblst/bindings/blst.h)

(copy_files libblst/bindings/blst_extended.h)

(copy_files libblst/bindings/blst_aux.h)

(data_only_dirs libblst)

(rule
 (deps
  (source_tree libblst)
  build_blst.sh
  bindings/blst_extended.c
  bindings/blst_extended.h)
 (targets libblst.a dllblst.so c_flags_blst.sexp)
 (action
  (no-infer
   (progn
    (run cp bindings/blst_extended.c libblst/src/blst_extended.c)
    (run cp bindings/blst_extended.h libblst/bindings/blst_extended.h)
    (run ./build_blst.sh)
    (run cp libblst/libblst.a libblst.a)
    (with-accepted-exit-codes
     (or 0 1)
     (run cp libblst/libblst.so dllblst.so))
    (with-accepted-exit-codes
     (or 0 1)
     (run cp libblst/libblst.dylib dllblst.so))))))

(rule
 (deps
  (source_tree libblst)
  needed-wasm-names
  bindings/blst_extended.c
  (glob_files *.h))
 (targets blst.wasm blst.js)
 (action
  (progn
   (run cp -f bindings/blst_extended.c libblst/src/)
   (run
    emcc
    -Os
    -o
    blst.js
    -I
    libblst/src/
    libblst/src/server.c
    %{dep:blst_wrapper.c}
    -DENABLE_EMSCRIPTEN_STUBS
    -DENABLE_MODULE_RECOVERY
    -s
    ALLOW_MEMORY_GROWTH=1
    -s
    WASM=1
    -s
    MALLOC=emmalloc
    -s
    EXPORT_ES6=0
    -s
    FILESYSTEM=0
    -s
    MODULARIZE=1
    -s
    EXPORT_NAME='_BLS12381'
    -s
    EXPORTED_FUNCTIONS=@needed-wasm-names
    --no-entry))))

(library
 (public_name bls12-381)
 (name bls12_381)
 (modules
  bls12_381
  ff_sig
  fr
  fq12
  g1
  g2
  gt
  pairing
  ;; private
  fq
  fq2)
 (instrumentation
  (backend bisect_ppx))
 (private_modules fq fq2)
 (libraries hex integers zarith)
 (library_flags :standard -linkall -ccopt -lpthread)
 (foreign_archives blst)
 (js_of_ocaml
  (javascript_files runtime_helper.js blst_bindings_stubs.js))
 (foreign_stubs
  (language c)
  (flags
   -Wall
   -Wextra
   :standard
   (:include c_flags_blst.sexp))
  (names blst_wrapper blst_bindings_stubs)))

(executable
 (name gen_wasm_needed_names)
 (modules gen_wasm_needed_names)
 (libraries re))

(rule
 (target needed-wasm-names)
 (mode promote)
 (deps
  (:files blst_bindings_stubs.js))
 (action
  (with-outputs-to
   %{target}
   (run ./gen_wasm_needed_names.exe %{files}))))

(install
 (files
  libblst/bindings/blst.h
  libblst/bindings/blst_aux.h
  bindings/blst_extended.h
  bindings/blst_misc.h
  bindings/caml_bls12_381_stubs.h)
 (section lib)
 (package bls12-381))
