(env
 (dev
  (flags
   (:standard -w -6))))

(library
 (name zarith)
 (public_name zarith)
 (modules z q big_int_Z zarith_version)
 (wrapped false)
 (foreign_stubs
  (language c)
  (names caml_z)
  (flags
   :standard
   (:include cflags.sexp)))
 (c_library_flags
  (:include libs.sexp)))

(executable
 (name discover)
 (libraries unix)
 (modules discover))

(rule
 (target Makefile)
 (deps configure config.guess gmp.env)
 (action
  (with-stdout-to
   configure.out
   (bash "env %{read:gmp.env} ./configure"))))

(rule
 (target gmp.env)
 (deps
  (:exe discover.exe))
 (action
  (with-stdout-to
   %{target}
   (run %{exe} "%{cc}"))))

(rule
 (target cflags.sexp)
 (deps Makefile)
 (action
  (with-stdout-to
   %{target}
   (progn
    (bash "echo -n '('")
    (bash "cat Makefile | sed -n -e 's/CFLAGS=//p'")
    (bash "echo -n ')'")))))

(rule
 (target libs.sexp)
 (deps Makefile)
 (action
  (with-stdout-to
   %{target}
   (progn
    (bash "echo -n '('")
    (bash "cat Makefile | sed -n -e 's/LIBS=//p'")
    (bash "echo -n ')'")))))

(rule
 (deps META)
 (action
  (with-stdout-to
   zarith_version.ml
   (progn
    (run echo "let")
    (bash "grep \"version\" META | head -1")))))

(library
 (name zarith_top)
 (optional)
 (public_name zarith.top)
 (modules zarith_top)
 (libraries zarith compiler-libs.toplevel))
